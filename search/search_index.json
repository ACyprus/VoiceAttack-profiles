{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"EliteAttack/","text":"EliteAttack This is my personal VoiceAttack profile for Elite: Dangerous. It started out ages ago as a modification of MalicVR\u2019s public profile , then looked less and less and less like that and I added and cleaned up a lot of things while removing the stuff I didn\u2019t use anyway. By now it would have probably been simpler to start from scratch. Some of it has grown to a state that it might be useful to others in its own package, so I\u2019ve separated the neutron jumping and Seals stuff into their own profiles. The rest is a random conglomerate of all things VA and E:D; from various voice commands to lots of EDDI event handlers. Speaking of EDDI; it has become in integral part of my Elite experience, especially the plethora of information it extracts from the game\u2019s journal and presents to you via lots and lots of status variables and by firing various events that can then be handled through VA commands. It\u2019s great. Check it out. (You might want to make it talk a lot less in it\u2019s personality options, or disable the speech responder entirely like I have.) Requirements In addition to the bindED and EDDI VoiceAttack plugins, this profiles needs my Python elite-scripts to do everything properly. The release page here includes a compiled version for Windows that does not need Python installed. If you use the profile package from the release page, they will be installed automatically. Settings Because Elite\u2019s keyboard handling is \u2026 weird you\u2019ll have to set the key to use for pasting text into Elite:Dangerous. If you are not using a \u201cstandard\u201d QWERT[YZ] layout, you will have to change it back to the key that is physically in the place where v would be on QWERTY. For other settings, see the Configuration Variables section. Including the Profile In Another Profile This is meant to be a standalone profile, including the others in this repo (and a couple more). It was never designed to be included into your existing profile. Nevertheless, it should work properly if you follow some guide lines: Run the startup command. You will need to have a startup command in your profile (= one that is run on profile loading) and call EliteDangerous.startup by name from that one. Make sure all EDDI events that EliteDangerous needs are correctly handled. For all events used in EliteDangerous that you already have handlers for in your profile, you\u2019ll have to include a call to EliteDangerous.<event name> . E.g. for \u201cEDDI Jumped\u201d, call EliteDangerous.EDDI Jumped by name from your ((EDDI Jumped)) command. Usage Chat Commands There\u2019s a bunch of commands in here to send certain things to chat. Unless stated otherwise, they will only work with the comms panel active, and you should be in the edit window ready to send. They will not hit Enter on their own. clear [chat;text] : Clears the chat window. Use from outside the comms panel. [local;squad;system;wing] chat : Puts you into the chosen chat channel. paste text : Pastes your clipboard into Elite. Works outside the comms panel too, e.g. on the galaxy map inside the search field. salute; oh seven : Will put \u201co7\u201d into the chat. Engineering/Materials how many [<g5 manufactured materials list>] do i have : Tells you how many of the given g5 manufactured material you currently have on board. I\u2019ve restricted it to just those to not spam speech recognition with too many phrases, and because those are the ones I usually want to know while jumping around the bubble and having an eye on any HGE that might be around. open e d engineer : Opens the ED Engineer tool. what [mats;materials] do i need? : Runs the EDDI responder that tells you which materials are below wanted threshold. Needs setting those first. Gets very spammy if you do it for all of them; personally I only set them for g5 manufactured, so I can quickly check if it\u2019s worth looking for HGE in a system I\u2019m in. Events The main point of this profile is to react to Elite\u2019s journal events (powered by EDDI). Each of the events listed here will trigger a ((EDDI <event>)) command in VoiceAttack which in turn triggers EliteDangerous.EDDI <event> and all included profiles\u2019 similar commands, e.g. SpanshAttack.EDDI <event> . The actual ((EDDI <event>)) command will only be executed once by VoiceAttack, the first one it can find. Keeping it separate from the actual code to be run makes it easier to handle (multiple) included profiles. If the command for an event will send key presses to Elite, it focuses the client window first to make sure they get registered properly. If it is not in focus, the first key press might be swallowed otherwise. For other commands, the profile just assumes that you are actively doing something in game and it is already focused :) Body Mapped Announces an estimate for high-value bodies\u2019 payouts and the remaining mapping candidates in the system as given by EDDI. Body scanned Announces any interesting body traits found when scanning: terraformable Earth-like World, Ammonia World or Water World landable and >5\u202fg semimajor axis <1.5\u202fls (only really interesting for planets, but there\u2019s no proper way to separate them from moons, sadly) radius <300\u202fkm Feel free to suggest more! Carrier Cooldown Tells you when your carrier is able to do its next jump. Technically only works if you were docked at it when it performed the jump, but I\u2019m doing some behind-the-scenes magic if you weren\u2019t :) Might be slightly off (too early) in the latter case. Carrier Jumped Announces system and body your carrier has just jumped to. Carrier Jump Engaged This event fires when your carrier jumps but you are not docked at it. It provides way less information than the Carrier Jumped event, but hey, I don\u2019t use most of it anyway. Basically just calls Carrier Jumped (and makes sure that a Carrier cooldown event is triggered manually at approximately the right time). Carrier Jump Request Announces the system and body your carrier has just been scheduled to jump to. Use this to double check ingame information; I\u2019ve had my carrier accept a body as jump target, but then end up around the star. This might give you a heads up on that. Carrier Pads Locked Announces your carriers lockdown procedures. This might only work when you are docked (which would make it pretty useless). Feel free to open in issue if that\u2019s the case. Discovery Scan Announces the number of bodies (and non-body signals) found in the system. Also compares the number of bodies to the amount reported by EDSM (requires Python scripts). Docked Automatically gets your ship into the hangar and opens station services. Docking Denied Tells you the reason for docking denial. Entered Normal Space Throttles to 0 upon dropping from SC, if EliteDangerous.hyperSpaceDethrottle is set. Fighter Launched Orders your ship to hold position so it doesn\u2019t chase after you immediately. Jet Cone Boost Sets your ship to full throttle immediately after you have supercharged. Jumped zeroes throttle gets the system\u2019s body count from EDSM (requires Python scripts) gets stations with outdated data (older than 1 year) from Spansh\u2019s API if you haven\u2019t visited the systems, starts a discovery scan (see the discovery scan command) last but not least tells you about planets worth scanning if you are on the R2R Liftoff Retracts landing gear for you. Seriously, is there any occasion in which you don\u2019t immediately want to retract it after takeoff? Low Fuel Warns you when you reach 25% fuel. Also reports number of jumps you have left or the (rough) range you still have on the fumes left in your tank. Material Threshold Warns you when a monitored material falls below it\u2019s minimum stock level. You will have to set a minimum desired amount in EDDI\u2019s material monitor options first for all materials you wish to be monitored. Message Sent Checks any message you send for a chat prefix and sends it to the proper chat window. Probably largely useless to you without modification. .nc : Actually doesn\u2019t send anything, but runs the RatAttack.announceNearestCMDR command with the system given in the rest of the message. .dc : Sends the message to the Discord window. .tc : Sends the message to my twitch channel window (IRC #alternerdtive). There are similar event commands in RatAttack and SealAttack handling other chat windows. Ship FSD This event actually is several different events in one. Currently the following are handled: charging: Warns you if your target system\u2019s main star is not scoopable, including an extra warning at low fuel levels. ( Note : This only works if the target system is in EDSM. So it\u2019s kind of useless for its intended use (exploration) and probably going to be removed at some point.) cooldown complete: Announces FSD cooldown if you are currently in normal space. Ship interdicted Tells you when you have been interdicted by a player. Is also supposed to target the interdictor automatically, but randomly sometimes just doesn\u2019t work. Yay! Ship targeted This currently doesn\u2019t do anything. I was fiddling around with automatically targeting a certain module on ship targeting, but it was more hassle than I had thought. SRV Launched Toggles SRV lights off after launching. Might not work if you drop particularly far after deployment because it works off a timer. Conversely might take a second to turn your lights off on a short drop and/or in high gravity. System Scan Complete Lists you all bodies EDDI considers worth mapping in the current system. Undocked Retracts landing gear for you. Seriously, is there any occasion in which you don\u2019t immediately want to retract it after takeoff? VA initialized Fires when the EDDI VoiceAttack plugin is loaded. Makes sure that EDDI is set to quite mode even if the profile was loaded before plugin initialization had completed. Misc The commands in here do random more or less useful things. bind keys;reset key binds : Reloads your key binds through the bindED plugin. You should do that after changing anything in the controls options. copy current system : Copies the current system name into the clipboard. distance [from;to] [\u2026] : Tells you the distance from your current position to the other thing you mentioned and is supported in the command. (requires Python scripts) do a barrow roll : WHOOOOOOO! fix window dimensions : When you start the game in VR, it forces into windowed mode with weird resolution. This changes it back. Hover the \u201cPLAY\u201d entry in the main menu, then run this. Will need adjustment for different graphics cards/drivers and the resolution you want. neutron [jump;trip] time : Shorter version of the same thing in SpanshAttack. neutron jumps left : Shorter version of the same thing in SpanshAttack. open copied system on EDSM : Opens the system in your clipboard on EDSM in your default browser. open coriolis : Opens Coriolis in your default browser. open [current;] system on EDSM : Opens your current system on EDSM in your default browser. open EDDI options; configure EDDI : Opens the EDDI configuration window. open e d d b [station;system;faction;] [search;] : Opens EDDB in your default browser. open e d s m : Opens EDSM in your default browser. open inara : Opens Inara in your default browser. open materials finder : Opens EDTutorials\u2019 materials finder in your default browser. open miner\u2019s tool : Opens https://edtools.ddns.net/miner in your default browser. reload bindings : Reloads your bindings for bindED. shut up EDDI : Immediately stops any ongoing (and queued) EDDI speech. [start;stop] [EDISON;navigation] : Hits CTRL+ALT+E which just so happens to be the start/stop hotkey I have set in E.D.I.S.O.N. [bodies;what\u2019s;what is] left to [map;be mapped;scan] : Tells you which bodies EDDI thinks are worth mapping in the system that you haven\u2019t mapped yet. Navigation There are so many navigation-focused commands now, they deserve there own category. Basically anything that helps you plot anywhere. A lot of those are powered by awesome EDDI so I don\u2019t have to do the work myself! plot course;[target;] next [waypoint;way point] : Plots a course to the system set in ~~system or the one in your clipboard. The former way is usually used by other commands to not interfere with your clipboard. [find;target] nearest [encoded;manufactured;raw] material trader : Targets the nearest respective material trader. [find;target] nearest [guardian;human] tech broker : Targets the nearest respective tech broker. [find;target] nearest [interstellar factor;mission system;scoopable star] : Well, you know the drill by now. [find;target] nearest mission system : Targets the nearest system that has a mission target. [find;target] [<system>] : Targets the given system on the galaxy map. There\u2019s a bunch in there, the list is easily extensible. Drop me a note if you want something included. Ship Controls Basically anything that is related to directly doing something with your ship. [abort;cancel;stop] jumping : Stops a currently charging FSD jump. [buggy;exploration] power : Sets your PD to 0/4/2 or 2/4/0 respectively. Works in SRV too. [close;deploy;extend;open;retract;] [\u2026] [up;down;] : Overly complicated command to handle everything related to Cargo Scoop, Hard Points, Landing Gear. You get the gist, I guess. Works in SRV too. [disco;discovery scan] : Executes a discovery scan. To work properly, you\u2019ll have to set the Discovery Scanner to your first fire group, secondary fire. [dis;]engage silent running : Turns silent running on and off. [head;spot;] lights [on;off] : Turns your lights on and off. Works in SRV too, kinda; turning lights off there relies on the state updating fast enough, which sometimes leads to weird results. [jump;engage;get me out;punch it chewie] [and scan;] [when ready;] : Retracts everything that might be protruding from your ship, then jumps to the next system. If the FSD isn\u2019t charging within 1s, it gets you into SC instead (e.g. if your target is obstructed). If given \u201cand scan\u201d runs a discovery scan. If given \u201cwhen ready\u201d waits for mass lock to clear, your FSD to cool down and you to leave scoop range before jumping. night vision [on;off] : Toggles your night vision on/off. Works in SRV too. power to [engines;shields;systems;weapons : Sets 4 pips to the thing you told it, 1 to the others. rapid fire lights : Flashes your lights 5 times in a row. retract [all;everything] : Retracts, well, everything. [start;stop] [firing;mining] : Starts/stops holding down primary fire. Mostly useful when mining. When triggered with \u201cmining\u201d, also deploys the cargo scoop. [super;] cruise [when ready;] : Retracts everything, then jumps to SC. If given \u201cwhen ready\u201d will wait for mass lock to clear and your FSD to cool down first. SRV controls Things relevant to your SRV, but not your ship. [recall;dismiss] ship : Recalls or dismisses ship. Currently does the same thing regardless of the state of your ship. I wish it would be possible to restrict it to doing one thing each, but that\u2019s currently not possible sadly. [toggle;enable;disable] drive assist : Handles all your drive assist needs! Targeting Well \u2026 targeting stuff, I guess. Not really sure why I made that it\u2019s own category, but oh well :) target next system : Selects the next system on your route. target wing man [1;2;3] : Targets your wing men. target\u2019s target : Targets your target\u2019s target. wing man [1;2;3] target : Targets your wing men\u2019s target. wing man nav lock : Toggles wing man nav lock on the selected wing member. UI Commands Everything handling stuff that\u2019s not related to controlling your ship, but manipulating some UI element(s). controls options : Opens the controls options menu. docking request;request dock[ing;] : Sends a docking request. [enter;leave] F S S : Opens/closes FSS. galaxy map : Opens the galaxy map. [main;game] menu : Opens the ESC menu. [relog;reset] to [open;solo] : Relogs to Open or Solo mode, respectively. restart from Desktop : Quits the game and restarts from an open launcher by clicking the play button. set [\u2026] filter : Sets a nav panel filter setting. See the command or just try different things for what is possible. You need to clear filters and hover over the filter button, then run this. system map : Opens the system map. take [high res;] screenshot : Takes a (high res) screenshot. toggle orbit lines : Toggles the visibility of orbit lines. [toggle;show;hide] interface : Toggles the cockpit interface (CTRL+ALT+G). Probably needs to be adjusted if you are not playing with Neo2 keyboard layout :) Update Commands check for profiles update : Does just that. Is also automatically run each time the profile is started. download profiles update : Downloads a profiles update if applicable. Will prompt you to restart VoiceAttack when the download has finished to import the updated profiles. open profiles change log : Opens CHANGELOG.md on Github. Logging The profile supports logging a bunch of stuff to the VoiceAttack event log. By default, logging is concise and constrained to basically error messages. If you need more logging (usually for debugging purposes), say enable logging . If you want to enable verbose logging by default , call the Logging.enableLogging command from your custom profile\u2019s startup command. Configuration Variables There are a bunch of configuration variables. You should not overwrite those manually, instead use the provided commands in the _configuration section! Basically all the settings are available using the customize settings prefix, then saying [enable;disable] <setting> for on/off switches and set <setting> for text variables. EDDI.quietMode (boolean): whether or not to set EDDI to quite mode. Default: true. Elite.pasteKey (string): the key used for pasting into Elite. On QWERTY this is v . Default: p . EliteDangerous.announceEdsmSystemStatus (boolean): whether to announce the system or some of its bodies missing on EDSM. Default: true. EliteDangerous.announceMappingCandidates (boolean): whether to announce mapping candidates when they are scanned. Default: true. EliteDangerous.announceOutdatedStationData (boolean): whether to announce stations with outdated data in systems you jump to. Default: true. EliteDangerous.announceR2RMappingCandidates (boolean): whether to announce planets worth mapping when jumping into a known system. This is useful for doing some R2R on the side. Default: false. EliteDangerous.enableCarrierAnnouncements (boolean): whether or not to process fleet carrier events. Default: true. EliteDangerous.enableAutoUpdateCheck (boolean): whether or not to automatically check for updates on profile startup. Default: true. EliteDangerous.flightAssistOff (boolean): whether to automatically toggle FlightAssist off on liftoff. Default: true. EliteDangerous.hyperspaceDethrottle (boolean): same thing as the SC assist setting; if on, will throttle to 0 automatically after jumping. Default: true. EliteDangerous.oldStationThreshold (int): Age in days that will cause station data to be considered outdated. Default: 365 (1\u202fyear). python.ScriptPath (string): the path you have placed the compiled python scripts in. Default: \u201c{VA_DIR}\\Sounds\\scripts\u201d (the \u201c\\Sounds\\scripts\u201d folder in your VoiceAttack installation directory). Delays / Pauses Delays needed e.g. between key presses in UI navigation can vary wildly depending on your PC\u2019s specs and configuration. Therefore they should be configurable, shouldn\u2019t they? So far those actually are: EliteDangerous.delays.quitToDesktop : Delay between quitting to desktop and hitting the play button in the launcher.","title":"EliteAttack #"},{"location":"EliteAttack/#eliteattack","text":"This is my personal VoiceAttack profile for Elite: Dangerous. It started out ages ago as a modification of MalicVR\u2019s public profile , then looked less and less and less like that and I added and cleaned up a lot of things while removing the stuff I didn\u2019t use anyway. By now it would have probably been simpler to start from scratch. Some of it has grown to a state that it might be useful to others in its own package, so I\u2019ve separated the neutron jumping and Seals stuff into their own profiles. The rest is a random conglomerate of all things VA and E:D; from various voice commands to lots of EDDI event handlers. Speaking of EDDI; it has become in integral part of my Elite experience, especially the plethora of information it extracts from the game\u2019s journal and presents to you via lots and lots of status variables and by firing various events that can then be handled through VA commands. It\u2019s great. Check it out. (You might want to make it talk a lot less in it\u2019s personality options, or disable the speech responder entirely like I have.)","title":"EliteAttack"},{"location":"EliteAttack/#requirements","text":"In addition to the bindED and EDDI VoiceAttack plugins, this profiles needs my Python elite-scripts to do everything properly. The release page here includes a compiled version for Windows that does not need Python installed. If you use the profile package from the release page, they will be installed automatically.","title":"Requirements"},{"location":"EliteAttack/#settings","text":"Because Elite\u2019s keyboard handling is \u2026 weird you\u2019ll have to set the key to use for pasting text into Elite:Dangerous. If you are not using a \u201cstandard\u201d QWERT[YZ] layout, you will have to change it back to the key that is physically in the place where v would be on QWERTY. For other settings, see the Configuration Variables section.","title":"Settings"},{"location":"EliteAttack/#including-the-profile-in-another-profile","text":"This is meant to be a standalone profile, including the others in this repo (and a couple more). It was never designed to be included into your existing profile. Nevertheless, it should work properly if you follow some guide lines: Run the startup command. You will need to have a startup command in your profile (= one that is run on profile loading) and call EliteDangerous.startup by name from that one. Make sure all EDDI events that EliteDangerous needs are correctly handled. For all events used in EliteDangerous that you already have handlers for in your profile, you\u2019ll have to include a call to EliteDangerous.<event name> . E.g. for \u201cEDDI Jumped\u201d, call EliteDangerous.EDDI Jumped by name from your ((EDDI Jumped)) command.","title":"Including the Profile In Another Profile"},{"location":"EliteAttack/#usage","text":"","title":"Usage"},{"location":"EliteAttack/#chat-commands","text":"There\u2019s a bunch of commands in here to send certain things to chat. Unless stated otherwise, they will only work with the comms panel active, and you should be in the edit window ready to send. They will not hit Enter on their own. clear [chat;text] : Clears the chat window. Use from outside the comms panel. [local;squad;system;wing] chat : Puts you into the chosen chat channel. paste text : Pastes your clipboard into Elite. Works outside the comms panel too, e.g. on the galaxy map inside the search field. salute; oh seven : Will put \u201co7\u201d into the chat.","title":"Chat Commands"},{"location":"EliteAttack/#engineeringmaterials","text":"how many [<g5 manufactured materials list>] do i have : Tells you how many of the given g5 manufactured material you currently have on board. I\u2019ve restricted it to just those to not spam speech recognition with too many phrases, and because those are the ones I usually want to know while jumping around the bubble and having an eye on any HGE that might be around. open e d engineer : Opens the ED Engineer tool. what [mats;materials] do i need? : Runs the EDDI responder that tells you which materials are below wanted threshold. Needs setting those first. Gets very spammy if you do it for all of them; personally I only set them for g5 manufactured, so I can quickly check if it\u2019s worth looking for HGE in a system I\u2019m in.","title":"Engineering/Materials"},{"location":"EliteAttack/#events","text":"The main point of this profile is to react to Elite\u2019s journal events (powered by EDDI). Each of the events listed here will trigger a ((EDDI <event>)) command in VoiceAttack which in turn triggers EliteDangerous.EDDI <event> and all included profiles\u2019 similar commands, e.g. SpanshAttack.EDDI <event> . The actual ((EDDI <event>)) command will only be executed once by VoiceAttack, the first one it can find. Keeping it separate from the actual code to be run makes it easier to handle (multiple) included profiles. If the command for an event will send key presses to Elite, it focuses the client window first to make sure they get registered properly. If it is not in focus, the first key press might be swallowed otherwise. For other commands, the profile just assumes that you are actively doing something in game and it is already focused :)","title":"Events"},{"location":"EliteAttack/#body-mapped","text":"Announces an estimate for high-value bodies\u2019 payouts and the remaining mapping candidates in the system as given by EDDI.","title":"Body Mapped"},{"location":"EliteAttack/#body-scanned","text":"Announces any interesting body traits found when scanning: terraformable Earth-like World, Ammonia World or Water World landable and >5\u202fg semimajor axis <1.5\u202fls (only really interesting for planets, but there\u2019s no proper way to separate them from moons, sadly) radius <300\u202fkm Feel free to suggest more!","title":"Body scanned"},{"location":"EliteAttack/#carrier-cooldown","text":"Tells you when your carrier is able to do its next jump. Technically only works if you were docked at it when it performed the jump, but I\u2019m doing some behind-the-scenes magic if you weren\u2019t :) Might be slightly off (too early) in the latter case.","title":"Carrier Cooldown"},{"location":"EliteAttack/#carrier-jumped","text":"Announces system and body your carrier has just jumped to.","title":"Carrier Jumped"},{"location":"EliteAttack/#carrier-jump-engaged","text":"This event fires when your carrier jumps but you are not docked at it. It provides way less information than the Carrier Jumped event, but hey, I don\u2019t use most of it anyway. Basically just calls Carrier Jumped (and makes sure that a Carrier cooldown event is triggered manually at approximately the right time).","title":"Carrier Jump Engaged"},{"location":"EliteAttack/#carrier-jump-request","text":"Announces the system and body your carrier has just been scheduled to jump to. Use this to double check ingame information; I\u2019ve had my carrier accept a body as jump target, but then end up around the star. This might give you a heads up on that.","title":"Carrier Jump Request"},{"location":"EliteAttack/#carrier-pads-locked","text":"Announces your carriers lockdown procedures. This might only work when you are docked (which would make it pretty useless). Feel free to open in issue if that\u2019s the case.","title":"Carrier Pads Locked"},{"location":"EliteAttack/#discovery-scan","text":"Announces the number of bodies (and non-body signals) found in the system. Also compares the number of bodies to the amount reported by EDSM (requires Python scripts).","title":"Discovery Scan"},{"location":"EliteAttack/#docked","text":"Automatically gets your ship into the hangar and opens station services.","title":"Docked"},{"location":"EliteAttack/#docking-denied","text":"Tells you the reason for docking denial.","title":"Docking Denied"},{"location":"EliteAttack/#entered-normal-space","text":"Throttles to 0 upon dropping from SC, if EliteDangerous.hyperSpaceDethrottle is set.","title":"Entered Normal Space"},{"location":"EliteAttack/#fighter-launched","text":"Orders your ship to hold position so it doesn\u2019t chase after you immediately.","title":"Fighter Launched"},{"location":"EliteAttack/#jet-cone-boost","text":"Sets your ship to full throttle immediately after you have supercharged.","title":"Jet Cone Boost"},{"location":"EliteAttack/#jumped","text":"zeroes throttle gets the system\u2019s body count from EDSM (requires Python scripts) gets stations with outdated data (older than 1 year) from Spansh\u2019s API if you haven\u2019t visited the systems, starts a discovery scan (see the discovery scan command) last but not least tells you about planets worth scanning if you are on the R2R","title":"Jumped"},{"location":"EliteAttack/#liftoff","text":"Retracts landing gear for you. Seriously, is there any occasion in which you don\u2019t immediately want to retract it after takeoff?","title":"Liftoff"},{"location":"EliteAttack/#low-fuel","text":"Warns you when you reach 25% fuel. Also reports number of jumps you have left or the (rough) range you still have on the fumes left in your tank.","title":"Low Fuel"},{"location":"EliteAttack/#material-threshold","text":"Warns you when a monitored material falls below it\u2019s minimum stock level. You will have to set a minimum desired amount in EDDI\u2019s material monitor options first for all materials you wish to be monitored.","title":"Material Threshold"},{"location":"EliteAttack/#message-sent","text":"Checks any message you send for a chat prefix and sends it to the proper chat window. Probably largely useless to you without modification. .nc : Actually doesn\u2019t send anything, but runs the RatAttack.announceNearestCMDR command with the system given in the rest of the message. .dc : Sends the message to the Discord window. .tc : Sends the message to my twitch channel window (IRC #alternerdtive). There are similar event commands in RatAttack and SealAttack handling other chat windows.","title":"Message Sent"},{"location":"EliteAttack/#ship-fsd","text":"This event actually is several different events in one. Currently the following are handled: charging: Warns you if your target system\u2019s main star is not scoopable, including an extra warning at low fuel levels. ( Note : This only works if the target system is in EDSM. So it\u2019s kind of useless for its intended use (exploration) and probably going to be removed at some point.) cooldown complete: Announces FSD cooldown if you are currently in normal space.","title":"Ship FSD"},{"location":"EliteAttack/#ship-interdicted","text":"Tells you when you have been interdicted by a player. Is also supposed to target the interdictor automatically, but randomly sometimes just doesn\u2019t work. Yay!","title":"Ship interdicted"},{"location":"EliteAttack/#ship-targeted","text":"This currently doesn\u2019t do anything. I was fiddling around with automatically targeting a certain module on ship targeting, but it was more hassle than I had thought.","title":"Ship targeted"},{"location":"EliteAttack/#srv-launched","text":"Toggles SRV lights off after launching. Might not work if you drop particularly far after deployment because it works off a timer. Conversely might take a second to turn your lights off on a short drop and/or in high gravity.","title":"SRV Launched"},{"location":"EliteAttack/#system-scan-complete","text":"Lists you all bodies EDDI considers worth mapping in the current system.","title":"System Scan Complete"},{"location":"EliteAttack/#undocked","text":"Retracts landing gear for you. Seriously, is there any occasion in which you don\u2019t immediately want to retract it after takeoff?","title":"Undocked"},{"location":"EliteAttack/#va-initialized","text":"Fires when the EDDI VoiceAttack plugin is loaded. Makes sure that EDDI is set to quite mode even if the profile was loaded before plugin initialization had completed.","title":"VA initialized"},{"location":"EliteAttack/#misc","text":"The commands in here do random more or less useful things. bind keys;reset key binds : Reloads your key binds through the bindED plugin. You should do that after changing anything in the controls options. copy current system : Copies the current system name into the clipboard. distance [from;to] [\u2026] : Tells you the distance from your current position to the other thing you mentioned and is supported in the command. (requires Python scripts) do a barrow roll : WHOOOOOOO! fix window dimensions : When you start the game in VR, it forces into windowed mode with weird resolution. This changes it back. Hover the \u201cPLAY\u201d entry in the main menu, then run this. Will need adjustment for different graphics cards/drivers and the resolution you want. neutron [jump;trip] time : Shorter version of the same thing in SpanshAttack. neutron jumps left : Shorter version of the same thing in SpanshAttack. open copied system on EDSM : Opens the system in your clipboard on EDSM in your default browser. open coriolis : Opens Coriolis in your default browser. open [current;] system on EDSM : Opens your current system on EDSM in your default browser. open EDDI options; configure EDDI : Opens the EDDI configuration window. open e d d b [station;system;faction;] [search;] : Opens EDDB in your default browser. open e d s m : Opens EDSM in your default browser. open inara : Opens Inara in your default browser. open materials finder : Opens EDTutorials\u2019 materials finder in your default browser. open miner\u2019s tool : Opens https://edtools.ddns.net/miner in your default browser. reload bindings : Reloads your bindings for bindED. shut up EDDI : Immediately stops any ongoing (and queued) EDDI speech. [start;stop] [EDISON;navigation] : Hits CTRL+ALT+E which just so happens to be the start/stop hotkey I have set in E.D.I.S.O.N. [bodies;what\u2019s;what is] left to [map;be mapped;scan] : Tells you which bodies EDDI thinks are worth mapping in the system that you haven\u2019t mapped yet.","title":"Misc"},{"location":"EliteAttack/#navigation","text":"There are so many navigation-focused commands now, they deserve there own category. Basically anything that helps you plot anywhere. A lot of those are powered by awesome EDDI so I don\u2019t have to do the work myself! plot course;[target;] next [waypoint;way point] : Plots a course to the system set in ~~system or the one in your clipboard. The former way is usually used by other commands to not interfere with your clipboard. [find;target] nearest [encoded;manufactured;raw] material trader : Targets the nearest respective material trader. [find;target] nearest [guardian;human] tech broker : Targets the nearest respective tech broker. [find;target] nearest [interstellar factor;mission system;scoopable star] : Well, you know the drill by now. [find;target] nearest mission system : Targets the nearest system that has a mission target. [find;target] [<system>] : Targets the given system on the galaxy map. There\u2019s a bunch in there, the list is easily extensible. Drop me a note if you want something included.","title":"Navigation"},{"location":"EliteAttack/#ship-controls","text":"Basically anything that is related to directly doing something with your ship. [abort;cancel;stop] jumping : Stops a currently charging FSD jump. [buggy;exploration] power : Sets your PD to 0/4/2 or 2/4/0 respectively. Works in SRV too. [close;deploy;extend;open;retract;] [\u2026] [up;down;] : Overly complicated command to handle everything related to Cargo Scoop, Hard Points, Landing Gear. You get the gist, I guess. Works in SRV too. [disco;discovery scan] : Executes a discovery scan. To work properly, you\u2019ll have to set the Discovery Scanner to your first fire group, secondary fire. [dis;]engage silent running : Turns silent running on and off. [head;spot;] lights [on;off] : Turns your lights on and off. Works in SRV too, kinda; turning lights off there relies on the state updating fast enough, which sometimes leads to weird results. [jump;engage;get me out;punch it chewie] [and scan;] [when ready;] : Retracts everything that might be protruding from your ship, then jumps to the next system. If the FSD isn\u2019t charging within 1s, it gets you into SC instead (e.g. if your target is obstructed). If given \u201cand scan\u201d runs a discovery scan. If given \u201cwhen ready\u201d waits for mass lock to clear, your FSD to cool down and you to leave scoop range before jumping. night vision [on;off] : Toggles your night vision on/off. Works in SRV too. power to [engines;shields;systems;weapons : Sets 4 pips to the thing you told it, 1 to the others. rapid fire lights : Flashes your lights 5 times in a row. retract [all;everything] : Retracts, well, everything. [start;stop] [firing;mining] : Starts/stops holding down primary fire. Mostly useful when mining. When triggered with \u201cmining\u201d, also deploys the cargo scoop. [super;] cruise [when ready;] : Retracts everything, then jumps to SC. If given \u201cwhen ready\u201d will wait for mass lock to clear and your FSD to cool down first.","title":"Ship Controls"},{"location":"EliteAttack/#srv-controls","text":"Things relevant to your SRV, but not your ship. [recall;dismiss] ship : Recalls or dismisses ship. Currently does the same thing regardless of the state of your ship. I wish it would be possible to restrict it to doing one thing each, but that\u2019s currently not possible sadly. [toggle;enable;disable] drive assist : Handles all your drive assist needs!","title":"SRV controls"},{"location":"EliteAttack/#targeting","text":"Well \u2026 targeting stuff, I guess. Not really sure why I made that it\u2019s own category, but oh well :) target next system : Selects the next system on your route. target wing man [1;2;3] : Targets your wing men. target\u2019s target : Targets your target\u2019s target. wing man [1;2;3] target : Targets your wing men\u2019s target. wing man nav lock : Toggles wing man nav lock on the selected wing member.","title":"Targeting"},{"location":"EliteAttack/#ui-commands","text":"Everything handling stuff that\u2019s not related to controlling your ship, but manipulating some UI element(s). controls options : Opens the controls options menu. docking request;request dock[ing;] : Sends a docking request. [enter;leave] F S S : Opens/closes FSS. galaxy map : Opens the galaxy map. [main;game] menu : Opens the ESC menu. [relog;reset] to [open;solo] : Relogs to Open or Solo mode, respectively. restart from Desktop : Quits the game and restarts from an open launcher by clicking the play button. set [\u2026] filter : Sets a nav panel filter setting. See the command or just try different things for what is possible. You need to clear filters and hover over the filter button, then run this. system map : Opens the system map. take [high res;] screenshot : Takes a (high res) screenshot. toggle orbit lines : Toggles the visibility of orbit lines. [toggle;show;hide] interface : Toggles the cockpit interface (CTRL+ALT+G). Probably needs to be adjusted if you are not playing with Neo2 keyboard layout :)","title":"UI Commands"},{"location":"EliteAttack/#update-commands","text":"check for profiles update : Does just that. Is also automatically run each time the profile is started. download profiles update : Downloads a profiles update if applicable. Will prompt you to restart VoiceAttack when the download has finished to import the updated profiles. open profiles change log : Opens CHANGELOG.md on Github.","title":"Update Commands"},{"location":"EliteAttack/#logging","text":"The profile supports logging a bunch of stuff to the VoiceAttack event log. By default, logging is concise and constrained to basically error messages. If you need more logging (usually for debugging purposes), say enable logging . If you want to enable verbose logging by default , call the Logging.enableLogging command from your custom profile\u2019s startup command.","title":"Logging"},{"location":"EliteAttack/#configuration-variables","text":"There are a bunch of configuration variables. You should not overwrite those manually, instead use the provided commands in the _configuration section! Basically all the settings are available using the customize settings prefix, then saying [enable;disable] <setting> for on/off switches and set <setting> for text variables. EDDI.quietMode (boolean): whether or not to set EDDI to quite mode. Default: true. Elite.pasteKey (string): the key used for pasting into Elite. On QWERTY this is v . Default: p . EliteDangerous.announceEdsmSystemStatus (boolean): whether to announce the system or some of its bodies missing on EDSM. Default: true. EliteDangerous.announceMappingCandidates (boolean): whether to announce mapping candidates when they are scanned. Default: true. EliteDangerous.announceOutdatedStationData (boolean): whether to announce stations with outdated data in systems you jump to. Default: true. EliteDangerous.announceR2RMappingCandidates (boolean): whether to announce planets worth mapping when jumping into a known system. This is useful for doing some R2R on the side. Default: false. EliteDangerous.enableCarrierAnnouncements (boolean): whether or not to process fleet carrier events. Default: true. EliteDangerous.enableAutoUpdateCheck (boolean): whether or not to automatically check for updates on profile startup. Default: true. EliteDangerous.flightAssistOff (boolean): whether to automatically toggle FlightAssist off on liftoff. Default: true. EliteDangerous.hyperspaceDethrottle (boolean): same thing as the SC assist setting; if on, will throttle to 0 automatically after jumping. Default: true. EliteDangerous.oldStationThreshold (int): Age in days that will cause station data to be considered outdated. Default: 365 (1\u202fyear). python.ScriptPath (string): the path you have placed the compiled python scripts in. Default: \u201c{VA_DIR}\\Sounds\\scripts\u201d (the \u201c\\Sounds\\scripts\u201d folder in your VoiceAttack installation directory).","title":"Configuration Variables"},{"location":"EliteAttack/#delays-pauses","text":"Delays needed e.g. between key presses in UI navigation can vary wildly depending on your PC\u2019s specs and configuration. Therefore they should be configurable, shouldn\u2019t they? So far those actually are: EliteDangerous.delays.quitToDesktop : Delay between quitting to desktop and hitting the play button in the launcher.","title":"Delays / Pauses"},{"location":"RatAttack/","text":"RatAttack This profile facilitates Fuel Ratting . It aims to eliminate as much of the required manual task and attention switching as possible via automation and voice commands. If you don\u2019t know what the Fuel Rats are, come hang out and ask :) Requirements Only vanilla VoiceAttack is absolutely required to use this profile. Optionally you can install EDDI and my elite scripts for advanced features. EDDI installed as a VoiceAttack plugin: This will give you a better (IMO) way of using TTS. Be sure to set RatAttack.useEddiForVoice . It will also enable you to have ingame chat be transferred to IRC; see below. elite-scripts : Using the Python scripts will give RatAttack a way to be aware of where your CMDRs are and give you the nearest one to a rat case. That\u2019s only really needed if you actually have multiple CMDRs, obviously. If you are using the profile package from the release page, they will be installed automatically. EDDI speech responder For the convenience of people that have not been using EDDI in the past, RatAttack will deactivate the speech responder automatically to not clutter them with unwanted TTS. If you are already an EDDI user and want to keep the default speech responder functionality, you will have to disable the EDDI.quietMode setting by running the customize settings disable eddi quiet mode command. Settings There are a lot of preferences you can set, including some you really want to concern yourself with before you start using the profile. Some of the more advanced features heavily rely on you giving it the correct things to work with. See the Configuration Variables section. Including the Profile When including the profile, be sure to Run the startup command. You will need to have a startup command in your profile (= one that is run on profile loading) and call RatAttack.startup from that one. Make sure all EDDI events that RatAttack needs are correctly handled. For all events used in RatAttack that you already have handlers for in your profile, you\u2019ll have to include a call to RatAttack.<event name> . E.g. for \u201cEDDI Message sent\u201d, call RatAttack.EDDI Message sent by name from your ((EDDI Message sent)) command. Usage Going On/Off Duty When you are on duty, RatAttack will automatically announce cases coming in through IRC. When off duty, it won\u2019t. [enable;disable] rat duty : puts you on/off duty. open [rat;] dispatch board : opens the web dispatch board. Handling a Case Getting Case Data From IRC You can setup your IRC client to pass incoming RATSIGNALS to VoiceAttack by writing them to a file ( %appdata%\\Ratattack\\ratsignal.pipe ), then calling the appropriate command ( RatAttack.announceCaseFromRatsignal for notification, RatAttack.getInfoFromRatsignal for silently putting it into the case list). This has two purposes: announcing a new incoming case storing case data and making it available to VoiceAttack, e.g. for copying the case\u2019s system into the clipboard You need to make your IRC client wait until the file disappears (for several cases coming in at once) write the RATSIGNAL to the file run the VoiceAttack command In my case I am running AdiIRC and have the following script setup for handling this: on *:TEXT:RATSIGNAL - CMDR*(??_SIGNAL):#fuelrats:{ /mkdir C:\\users\\<user>\\appdata\\roaming\\RatAttack\\ /handleratsignal $1- } alias handleratsignal { if ( $exists(C:\\users\\<user>\\appdata\\roaming\\RatAttack\\ratsignal.pipe) ) { /sleep 1 /handleratsignal $1- } else { /write C:\\users\\<user>\\appdata\\roaming\\RatAttack\\ratsignal.pipe $1- if ( $away ) { /run -h \"X:\\path\\to\\VoiceAttack\\VoiceAttack.exe\" -nofocus -command \"RatAttack.getInfoFromRatSignal\" } else { /run -h \"X:\\path\\to\\VoiceAttack\\VoiceAttack.exe\" -nofocus -command \"RatAttack.announceCaseFromRatSignal\" } } } You get the gist; if not and you don\u2019t know how to do the same thing for your IRC client or it doesn\u2019t support copying the control characters in the ratsignal that the profile uses to split the information, either switch to AdiIRC or bribe me to include some other way to get case data into VoiceAttack. Note : If you are running VoiceAttack as admin you need to run your IRC client as admin, too! Otherwise it can\u2019t talk to VoiceAttack for security reasons. You really should not run VoiceAttack with elevated privileges though. Or anything. Internal Case List If you have your IRC client setup properly, VoiceAttack will hold a list with all rat cases that have come in while you had it running. It will save the case number, CMDR name, system, O\u2082 status and platform. There are several commands you can run on this list, giving it a case number: rat case number [0..19] details : Will give you all stored info on a case. [current;] rat case details : Will give you all stored info on the currently open case. distance to current rat case : Will give you the distance from your current location to the currently opened rat case. Requires the use of my elite-scripts Python scripts. distance to rat case number [0..19] : Will give you the distance from your current system to a case\u2019s system. Requires the use of my elite-scripts Python scripts. nearest commander to rat case number [0..19] : Will give you the nearest of your CMDRs with their distance to a case\u2019s system. Requires some setup and the use of my elite-scripts Python scripts. nearest commander to [the;] rat case : Will give you the nearest of your CMDRs with their distance to the current case\u2019s system. Requires some setup and the use of my elite-scripts Python scripts. Opening a Case open rat case number [0..19] : Opens rat case with the given number. If there is no case data for that case (e.g. because you don\u2019t have your IRC client set up properly), it will still open it, just not have any data on it. open [latest;] rat case : Opens the latest rat case that has come in through IRC. Will probably error out in creative ways if you don\u2019t have your IRC client set up properly. Too tired right now to have proper error handling so just open an issue if you run into problems (it\u2019s 7am, I haven\u2019t slept and want to finish this doc to get the release out (yes, you are allowed to laugh at this section)). Closing a Case [close;clear] rat case : Closes the currently open rat case. Making Calls There are a bunch of calls you can make for a case, the most common are modelled through VoiceAttack commands. The descriptive commands (e.g. \u201csystem confirmed\u201d) will be shortened to the usual IRC short hands (e.g. \u201csysconf\u201d). If you need something more unusual you can either still manually type it into your IRC client or use the \u201cGeneral IRC Integration\u201d, see below. call [1..20] jumps [and login;and takeoff;left;] : Calls jump for the currently open case. You can optionally include that you will still have to login to the game or have to take off from your current station/port/outpost/planet. call friend [positive;negative] [in pg;in private group;in solo;in main meu;sysconf;system confirmed] : Friend request confirmations, with all the things you might want to / should call with it. call [beacon;fuel;instance;pos;position;prep;sys;system;wing] [positive;negative] : All the stuff you usually need for ratting after you have received the friend request. call wing pending : Calls \u201cwr pending\u201d for when it takes 30s again to actually show up. call client in [exclusion zone;main menu;open;open sysconf;pg;private group;solo;super cruise] : Callouts for all the various things a client could get themselves into. call [client destroyed;client offline;sysconf;system confirmed] : This is the command you don\u2019t want to use. Include sysconf in your \u201cfriend+\u201d or \u201cin open\u201d calls, and make sure you will never have to call \u201cclient destroyed\u201d, would you? General IRC Interaction (requires EDDI) Using EDDI to read the game\u2019s journal, you can send messages to IRC from Elite\u2019s ingame chat. Be aware that the chat message will still appear in the ingame chat channel you send it to! I recommend using local chat and limiting the use to instances that will probably not have other players in it (e.g. instanced in normal space with the client or in SC in some remote system out in the black on a long range rescue). fuelrats: Use \u201c.fr \\<message>\u201d to have VoiceAttack send \u201c#\\<caseNumber> \\<message>\u201d to the #fuelrats channel \u2013 or yell at you when you are not on a case. ratchat: Use \u201c.rc \\<message>\u201d to have VoiceAttack send \u201c\\<message>\u201d to #ratchat. These commands send their text to windows with \u201c#fuelrats\u201d and \u201c#ratchat\u201d in their title, respectively. If your IRC client does not do that, you will have to change the \u201ctarget\u201d window of the RatAttack.sendToFuelrats and RatAttack.sendToRatchat commands to reflect the actual window titles on your system. I will look into making this more elegant to change in the future. Logging The profile supports logging a bunch of stuff to the VoiceAttack event log. By default, logging is concise and constrained to basically error messages. If you need more logging (usually for debugging purposes), say enable logging . If you want to enable verbose logging by default , call the Logging.enableLogging command from your custom profile\u2019s startup command. Exposed Variables The following Variables are global and thus readable (and writeable! Please don\u2019t unless it\u2019s a config variable \u2026) from other profiles. Configuration Variables There are a bunch of configuration variables. You should not overwrite those manually, instead use the provided commands in the _configuration section! Basically all the settings are available using the customize settings prefix, then saying [enable;disable] <setting> for on/off switches and set <setting> for text variables. EDDI.quietMode (boolean): whether or not to set EDDI to quite mode. Default: true. EDDI.useEddiForVoice (boolean): whether to use the EDDI plugin to handle text-to-speech over VoiceAttacks built-in speech function. Default: false. Elite.pasteKey (string): the key used for pasting into Elite. On QWERTY this is v . Default: v . RatAttack.announceNearestCMDR (boolean): whether or not to automatically announce your nearest CMDR to a case. Requires the elite-scripts Python scripts. Will probably break in creative ways if you don\u2019t have them and turn it on anyway. Default: false. RatAttack.announcePlatform (boolean): whether or not to announce the case\u2019s platform by default. Useful to set if you are active on more than one platform. Even with this off, you will still be warned when you open a case that is not on one of your platforms. Default: false. RatAttack.CMDRs (string): list of your CMDR names, delimited by spaces. If your names include spaces, you will have to put them in quotes. Default: \u201c\"J Jora Jameson\" NameWithNoSpace\u201d. RatAttack.confirmCalls (boolean): whether VoiceAttack should ask you before posting to #fuelrats to make sure there hasn\u2019t been an error in voice recognition and you accidentally post the wrong thing. Default: true. RatAttack.autoCloseCase (boolean): whether or not to automatically close an open rat case on calling \u201cfuel+\u201d. Default: false. RatAttack.onDuty (boolean): whether or not you are currently on rat duty. Default: true. RatAttack.platforms (string): the platforms you want to be informed of incoming cases for. If you are on console, you can still have VoiceAttack running on the PC that you are using for IRC and handle calls and stuff using voice! Delimited by whatever you want. Can include \u201cPC\u201d, \u201cXB\u201d, \u201cPS4\u201d. Default: \u201cPC\u201d. python.scriptPath (string): the path you put the Python scripts in. Default: \u201c{VA_DIR}\\Sounds\\scripts\u201d. Other Variables Current case data: RatAttack.caseNumber (int): the number of the case you are currently on. Will be Not Set if you are not on a case. RatAttack.onCase (boolean): whether or not you are currently on a case. Case list: RatAttack.caseList.<case#>.cmdr (string) RatAttack.caseList.<case#>.system (string) RatAttack.caseList.<case#>.platform (string) RatAttack.caseList.<case#>.codeRed (boolean) \u2026 with <case#> being a number between 0 and 19.","title":"RatAttack #"},{"location":"RatAttack/#ratattack","text":"This profile facilitates Fuel Ratting . It aims to eliminate as much of the required manual task and attention switching as possible via automation and voice commands. If you don\u2019t know what the Fuel Rats are, come hang out and ask :)","title":"RatAttack"},{"location":"RatAttack/#requirements","text":"Only vanilla VoiceAttack is absolutely required to use this profile. Optionally you can install EDDI and my elite scripts for advanced features. EDDI installed as a VoiceAttack plugin: This will give you a better (IMO) way of using TTS. Be sure to set RatAttack.useEddiForVoice . It will also enable you to have ingame chat be transferred to IRC; see below. elite-scripts : Using the Python scripts will give RatAttack a way to be aware of where your CMDRs are and give you the nearest one to a rat case. That\u2019s only really needed if you actually have multiple CMDRs, obviously. If you are using the profile package from the release page, they will be installed automatically.","title":"Requirements"},{"location":"RatAttack/#eddi-speech-responder","text":"For the convenience of people that have not been using EDDI in the past, RatAttack will deactivate the speech responder automatically to not clutter them with unwanted TTS. If you are already an EDDI user and want to keep the default speech responder functionality, you will have to disable the EDDI.quietMode setting by running the customize settings disable eddi quiet mode command.","title":"EDDI speech responder"},{"location":"RatAttack/#settings","text":"There are a lot of preferences you can set, including some you really want to concern yourself with before you start using the profile. Some of the more advanced features heavily rely on you giving it the correct things to work with. See the Configuration Variables section.","title":"Settings"},{"location":"RatAttack/#including-the-profile","text":"When including the profile, be sure to Run the startup command. You will need to have a startup command in your profile (= one that is run on profile loading) and call RatAttack.startup from that one. Make sure all EDDI events that RatAttack needs are correctly handled. For all events used in RatAttack that you already have handlers for in your profile, you\u2019ll have to include a call to RatAttack.<event name> . E.g. for \u201cEDDI Message sent\u201d, call RatAttack.EDDI Message sent by name from your ((EDDI Message sent)) command.","title":"Including the Profile"},{"location":"RatAttack/#usage","text":"","title":"Usage"},{"location":"RatAttack/#going-onoff-duty","text":"When you are on duty, RatAttack will automatically announce cases coming in through IRC. When off duty, it won\u2019t. [enable;disable] rat duty : puts you on/off duty. open [rat;] dispatch board : opens the web dispatch board.","title":"Going On/Off Duty"},{"location":"RatAttack/#handling-a-case","text":"","title":"Handling a Case"},{"location":"RatAttack/#getting-case-data-from-irc","text":"You can setup your IRC client to pass incoming RATSIGNALS to VoiceAttack by writing them to a file ( %appdata%\\Ratattack\\ratsignal.pipe ), then calling the appropriate command ( RatAttack.announceCaseFromRatsignal for notification, RatAttack.getInfoFromRatsignal for silently putting it into the case list). This has two purposes: announcing a new incoming case storing case data and making it available to VoiceAttack, e.g. for copying the case\u2019s system into the clipboard You need to make your IRC client wait until the file disappears (for several cases coming in at once) write the RATSIGNAL to the file run the VoiceAttack command In my case I am running AdiIRC and have the following script setup for handling this: on *:TEXT:RATSIGNAL - CMDR*(??_SIGNAL):#fuelrats:{ /mkdir C:\\users\\<user>\\appdata\\roaming\\RatAttack\\ /handleratsignal $1- } alias handleratsignal { if ( $exists(C:\\users\\<user>\\appdata\\roaming\\RatAttack\\ratsignal.pipe) ) { /sleep 1 /handleratsignal $1- } else { /write C:\\users\\<user>\\appdata\\roaming\\RatAttack\\ratsignal.pipe $1- if ( $away ) { /run -h \"X:\\path\\to\\VoiceAttack\\VoiceAttack.exe\" -nofocus -command \"RatAttack.getInfoFromRatSignal\" } else { /run -h \"X:\\path\\to\\VoiceAttack\\VoiceAttack.exe\" -nofocus -command \"RatAttack.announceCaseFromRatSignal\" } } } You get the gist; if not and you don\u2019t know how to do the same thing for your IRC client or it doesn\u2019t support copying the control characters in the ratsignal that the profile uses to split the information, either switch to AdiIRC or bribe me to include some other way to get case data into VoiceAttack. Note : If you are running VoiceAttack as admin you need to run your IRC client as admin, too! Otherwise it can\u2019t talk to VoiceAttack for security reasons. You really should not run VoiceAttack with elevated privileges though. Or anything.","title":"Getting Case Data From IRC"},{"location":"RatAttack/#internal-case-list","text":"If you have your IRC client setup properly, VoiceAttack will hold a list with all rat cases that have come in while you had it running. It will save the case number, CMDR name, system, O\u2082 status and platform. There are several commands you can run on this list, giving it a case number: rat case number [0..19] details : Will give you all stored info on a case. [current;] rat case details : Will give you all stored info on the currently open case. distance to current rat case : Will give you the distance from your current location to the currently opened rat case. Requires the use of my elite-scripts Python scripts. distance to rat case number [0..19] : Will give you the distance from your current system to a case\u2019s system. Requires the use of my elite-scripts Python scripts. nearest commander to rat case number [0..19] : Will give you the nearest of your CMDRs with their distance to a case\u2019s system. Requires some setup and the use of my elite-scripts Python scripts. nearest commander to [the;] rat case : Will give you the nearest of your CMDRs with their distance to the current case\u2019s system. Requires some setup and the use of my elite-scripts Python scripts.","title":"Internal Case List"},{"location":"RatAttack/#opening-a-case","text":"open rat case number [0..19] : Opens rat case with the given number. If there is no case data for that case (e.g. because you don\u2019t have your IRC client set up properly), it will still open it, just not have any data on it. open [latest;] rat case : Opens the latest rat case that has come in through IRC. Will probably error out in creative ways if you don\u2019t have your IRC client set up properly. Too tired right now to have proper error handling so just open an issue if you run into problems (it\u2019s 7am, I haven\u2019t slept and want to finish this doc to get the release out (yes, you are allowed to laugh at this section)).","title":"Opening a Case"},{"location":"RatAttack/#closing-a-case","text":"[close;clear] rat case : Closes the currently open rat case.","title":"Closing a Case"},{"location":"RatAttack/#making-calls","text":"There are a bunch of calls you can make for a case, the most common are modelled through VoiceAttack commands. The descriptive commands (e.g. \u201csystem confirmed\u201d) will be shortened to the usual IRC short hands (e.g. \u201csysconf\u201d). If you need something more unusual you can either still manually type it into your IRC client or use the \u201cGeneral IRC Integration\u201d, see below. call [1..20] jumps [and login;and takeoff;left;] : Calls jump for the currently open case. You can optionally include that you will still have to login to the game or have to take off from your current station/port/outpost/planet. call friend [positive;negative] [in pg;in private group;in solo;in main meu;sysconf;system confirmed] : Friend request confirmations, with all the things you might want to / should call with it. call [beacon;fuel;instance;pos;position;prep;sys;system;wing] [positive;negative] : All the stuff you usually need for ratting after you have received the friend request. call wing pending : Calls \u201cwr pending\u201d for when it takes 30s again to actually show up. call client in [exclusion zone;main menu;open;open sysconf;pg;private group;solo;super cruise] : Callouts for all the various things a client could get themselves into. call [client destroyed;client offline;sysconf;system confirmed] : This is the command you don\u2019t want to use. Include sysconf in your \u201cfriend+\u201d or \u201cin open\u201d calls, and make sure you will never have to call \u201cclient destroyed\u201d, would you?","title":"Making Calls"},{"location":"RatAttack/#general-irc-interaction","text":"(requires EDDI) Using EDDI to read the game\u2019s journal, you can send messages to IRC from Elite\u2019s ingame chat. Be aware that the chat message will still appear in the ingame chat channel you send it to! I recommend using local chat and limiting the use to instances that will probably not have other players in it (e.g. instanced in normal space with the client or in SC in some remote system out in the black on a long range rescue).","title":"General IRC Interaction"},{"location":"RatAttack/#fuelrats-use-fr-message-to-have-voiceattack-send-casenumber","text":"\\<message>\u201d to the #fuelrats channel \u2013 or yell at you when you are not on a case.","title":"fuelrats: Use \u201c.fr \\&lt;message>\u201d to have VoiceAttack send \u201c#\\&lt;caseNumber>"},{"location":"RatAttack/#ratchat-use-rc-message-to-have-voiceattack-send-message-to","text":"#ratchat. These commands send their text to windows with \u201c#fuelrats\u201d and \u201c#ratchat\u201d in their title, respectively. If your IRC client does not do that, you will have to change the \u201ctarget\u201d window of the RatAttack.sendToFuelrats and RatAttack.sendToRatchat commands to reflect the actual window titles on your system. I will look into making this more elegant to change in the future.","title":"ratchat: Use \u201c.rc \\&lt;message>\u201d to have VoiceAttack send \u201c\\&lt;message>\u201d to"},{"location":"RatAttack/#logging","text":"The profile supports logging a bunch of stuff to the VoiceAttack event log. By default, logging is concise and constrained to basically error messages. If you need more logging (usually for debugging purposes), say enable logging . If you want to enable verbose logging by default , call the Logging.enableLogging command from your custom profile\u2019s startup command.","title":"Logging"},{"location":"RatAttack/#exposed-variables","text":"The following Variables are global and thus readable (and writeable! Please don\u2019t unless it\u2019s a config variable \u2026) from other profiles.","title":"Exposed Variables"},{"location":"RatAttack/#configuration-variables","text":"There are a bunch of configuration variables. You should not overwrite those manually, instead use the provided commands in the _configuration section! Basically all the settings are available using the customize settings prefix, then saying [enable;disable] <setting> for on/off switches and set <setting> for text variables. EDDI.quietMode (boolean): whether or not to set EDDI to quite mode. Default: true. EDDI.useEddiForVoice (boolean): whether to use the EDDI plugin to handle text-to-speech over VoiceAttacks built-in speech function. Default: false. Elite.pasteKey (string): the key used for pasting into Elite. On QWERTY this is v . Default: v . RatAttack.announceNearestCMDR (boolean): whether or not to automatically announce your nearest CMDR to a case. Requires the elite-scripts Python scripts. Will probably break in creative ways if you don\u2019t have them and turn it on anyway. Default: false. RatAttack.announcePlatform (boolean): whether or not to announce the case\u2019s platform by default. Useful to set if you are active on more than one platform. Even with this off, you will still be warned when you open a case that is not on one of your platforms. Default: false. RatAttack.CMDRs (string): list of your CMDR names, delimited by spaces. If your names include spaces, you will have to put them in quotes. Default: \u201c\"J Jora Jameson\" NameWithNoSpace\u201d. RatAttack.confirmCalls (boolean): whether VoiceAttack should ask you before posting to #fuelrats to make sure there hasn\u2019t been an error in voice recognition and you accidentally post the wrong thing. Default: true. RatAttack.autoCloseCase (boolean): whether or not to automatically close an open rat case on calling \u201cfuel+\u201d. Default: false. RatAttack.onDuty (boolean): whether or not you are currently on rat duty. Default: true. RatAttack.platforms (string): the platforms you want to be informed of incoming cases for. If you are on console, you can still have VoiceAttack running on the PC that you are using for IRC and handle calls and stuff using voice! Delimited by whatever you want. Can include \u201cPC\u201d, \u201cXB\u201d, \u201cPS4\u201d. Default: \u201cPC\u201d. python.scriptPath (string): the path you put the Python scripts in. Default: \u201c{VA_DIR}\\Sounds\\scripts\u201d.","title":"Configuration Variables"},{"location":"RatAttack/#other-variables","text":"Current case data: RatAttack.caseNumber (int): the number of the case you are currently on. Will be Not Set if you are not on a case. RatAttack.onCase (boolean): whether or not you are currently on a case. Case list: RatAttack.caseList.<case#>.cmdr (string) RatAttack.caseList.<case#>.system (string) RatAttack.caseList.<case#>.platform (string) RatAttack.caseList.<case#>.codeRed (boolean) \u2026 with <case#> being a number between 0 and 19.","title":"Other Variables"},{"location":"SpanshAttack/","text":"SpanshAttack This profile uses the ED-NeutronRouter plugin to plot neutron jumps using spansh . It fully does everything you need from within the game and VoiceAttack, you won\u2019t have to visit the site at any point. Requirements In addition to VoiceAttack, you will need the following plugins to use this profile: bindED EDDI installed as a VoiceAttack plugin ED-NeutronRouter : required for SpanshAttack. Make sure to grab the pre-release 1.02 since 1.01 has a bug with a hardcoded 50\u202fly jump range. EDDI speech responder For the convenience of people that have not been using EDDI in the past, SpanshAttack will deactivate the speech responder automatically to not clutter them with unwanted TTS. If you are already an EDDI user and want to keep the default speech responder functionality, you will have to disable the EDDI.quietMode setting by running the customize settings disable eddi quiet mode command. Settings Because Elite\u2019s keyboard handling is \u2026 weird you\u2019ll have to set the key to use for pasting text into Elite:Dangerous. If you are not using a \u201cstandard\u201d QWERT[YZ] layout, you will have to change it back to the key that is physically in the place where v would be on QWERTY. For other settings, see the Configuration Variables section. The last \u201csetting\u201d in the not-so-strict sense of the word is the SpanshAttack.getShipRange command. Any ship listed in there will automatically have its jump range used instead of VA prompting you for it. Since, again, VA will execute the first matching command found, you can create this command in your own profile when you are using SpanshAttack by including it. You can override a saved range for your ship by using the plot neutron [course;route;trip] with custom range command. The ED-NeutronRouter plugin is technically supposed to read the current jump range from EDDI; sadly a) it\u2019s bugged right now, and b) EDDI is storing the maximum distance for your ship instead of the current / full on fuel one. Including the Profile When including the profile, be sure to Run the startup command. You will need to have a startup command in your profile (= one that is run on profile loading) and call SpanshAttack.startup from that one. Make sure all EDDI events that SpanshAttack needs are correctly handled. For all events used in SpanshAttack that you already have handlers for in your profile, you\u2019ll have to include a call to SpanshAttack.<event name> . E.g. for \u201cEDDI Jumped\u201d, call SpanshAttack.EDDI Jumped by name from your ((EDDI Jumped)) command. (Optional) Have a SpanshAttack.getShipRange command in your profile to overwrite the default one with your ship\u2019s ranges. See the default command for pointers. Usage Plotting a Route Target the system you want to be routed to (target, do not plot to it). Either exit the galaxy map or make sure you are on its first tab (or auto-plotting will break). Trigger the SpanshAttack.plotRoute command either by voice ( plot neutron [course;route;trip] [with custom range;] ) or calling it from another command. Enter your ship\u2019s jump range if prompted. Wait for the route to be calculated. The command will automatically open the galaxy map and jump to the first waypoint on your route. If you run into weird behaviour, it\u2019s probably because your target system is not in EDDB. Either target the first waypoint or plot to it. Start jumping! Plotting to a System Unknown to the Neutron Router The router can only plot a route to a system that is in its data base (obviously can also only give you way points that are). If your target system is not, there are several levels of fallback handling to find a system that is. Check Next system coordinates provided by EDDI. If the system is in EDSM, but has for some reason not been sent over EDDN to other sites including Spansh we can get coordinates here. If the system is not in EDSM check EDTS. It can calculate approximate coordinates for a given procedurally generated system name. If that fails prompt the user for input. Query Spansh\u2019 API for the closest system to these coordinates. Plot a route to the closest system. Generally you should almost never be asked to input coordinates manually. If EDTS provides coordinates with an accuracy that is worse than \u00b1100\u202fly per axis, you will be prompted to make sure you are going roughly to the right coordinates. You will find the system that is used for plotting, its coordinates and the accuracy in VoiceAttack\u2019s log window. Neutron Jumping With standard settings, just supercharge off a neutron cone. You should automatically be taken to the galaxy map with the next waypoint selected. In case you have disabled auto-plotting to the next waypoint, manually invoke the SpanshAttack.targetNextNeutronWaypoint command by voice ( [target;] next neutron [waypoint; way point] ) or calling it from another command. Additionally, you can use the SpanshAttack.copyNextNeutronWaypoint / [get;copy] next neutron [waypoint;way point] command to copy the next neutron waypoint to the clipboard. Manual Re-Plot Trigger the SpanshAttack.replotRoute command either by voice ( replot neutron [course;route;trip] ) or calling it from another command. This will start a re-plot of the current route with the same target system and jump range. Refueling Whenever you refuel off a scoopable star, the profile will automatically throttle back up to 100% speed. Unless you have disabled it in your configuration, you will also automatically target the next system on your route and jump to it once you leave fuel scoop range. Clearing a Route When you reach your target system, the neutron route will automatically be cleared. If you want to prematurely end your trip, call the SpanshAttack.clearRoute / clear neutron [course;route;trip] command. Other Commands Announcing Jumps Left You can have VoiceAttack tell you the amount of jumps left on the current route by invoking SpanshAttack.announceJumpsLeft or saying how many [neutron;] jumps [are;] left? . Note : Because it\u2019s pretty much impossible to calculate a 100% accurate value for the total jumps left, it will just tell you the jump count from the current neutron waypoint . Announce elapsed time on the trip SpanshAttack keeps track of your start time, even if you have the option to time your trip turned off. This way you can get the time you\u2019ve been jumping with the SpanshAttack.announceTripTime or how long have i been [jumping;on this trip;on this neutron trip]? commands. Reload bindings If you change any relevant bindings (e.g. the galaxy map key), you should run the reload bindings command to make sure that SpanshAttack presses the right thing for you. Eh, just do it every time you edit your controls without re-starting VoiceAttack, just to be sure. Helper Functions The profile contains a lot of helper functions that get called by the aforementioned commands. Have a look around, maybe learn something about VoiceAttack :) Logging The profile supports logging a bunch of stuff to the VoiceAttack event log. By default, logging is concise and constrained to basically error messages. If you need more logging (usually for debugging purposes), say enable logging . If you want to enable verbose logging by default , call the Logging.enableLogging command from your custom profile\u2019s startup command. Exposed Variables The following Variables are global and thus readable (and writeable! Please don\u2019t unless it\u2019s a config variable \u2026) from other profiles: Configuration Variables There are a bunch of configuration variables. You should not overwrite those manually, instead use the provided commands in the _configuration section! Basically all the settings are available using the customize settings prefix, then saying [enable;disable] <setting> for on/off switches and set <setting> for text variables. EDDI.quietMode (boolean): whether or not to set EDDI to quite mode. Default: true. EDDI.useEddiForVoice (boolean): whether to use EDDI over VA\u2019s builtin say command. Default: false. Elite.pasteKey (string): the key used for pasting into Elite. On QWERTY this is v . Default: v . SpanshAttack.timeTrip (boolean): whether to automatically tell you at the end of a trip how long it took you to get there. Default: false. SpanshAttack.announceWaypoints (boolean): whether to announce each waypoint of the neutron route. Default: true. SpanshAttack.announceJumpsLeft (string): ; -separated list of remaining jumps to announce when said amounts are reached. Right now only works if they are exactly reached when supercharging off a neutron. Note the extra ; at the beginning and end of the string. Default: ;1;3;5;10;15;20;30;50;75;100; SpanshAttack.autoJumpAfterScooping (boolean): whether to automatically jump after fuel scooping (and moving out of scoop range). Default: true. SpanshAttack.autoPlot (boolean): whether to automatically plot to the next waypoint on supercharging. Default: true. SpanshAttack.clearOnShutdown (boolean): whether or not to automatically clear an active neutron route on Elite client shutdown. Default: true. SpanshAttack.defaultToLadenRange (boolean): whether or not to default to your ship\u2019s laden range (as reported by EDDI) instead of asking for user input. Sadly it\u2019s with current fuel, not full. Setting a ship\u2019s jump range in the SpanshAttack.getShipRange command will still overrule this. Default: false. SpanshAttack.copyWaypointToClipboard (boolean): whether to copy the next waypoint into the Windows clipboard for use in other programs. Default: false. python.scriptPath (string): the path you put the Python scripts in. Default: \u201c{VA_DIR}\\Sounds\\scripts\u201d. Other Variables These variables can be used to get information about the current neutron route. Please do not set them manually and / or from outside the SpanshAttack profile. SpanshAttack.plotSystem (string): the system actually plotted towards using the neutron router (onley used/set if the target system is not in the data base) SpanshAttack.targetSystem (string): the target system for the current neutron route SpanshAttack.nextNeutronWaypoint (string): the next waypoint on the current neutron route SpanshAttack.neutronJumpMode (boolean): neutron jump mode active/inactive SpanshAttack.jumpRange (decimal): the current ship\u2019s jump range","title":"SpanshAttack #"},{"location":"SpanshAttack/#spanshattack","text":"This profile uses the ED-NeutronRouter plugin to plot neutron jumps using spansh . It fully does everything you need from within the game and VoiceAttack, you won\u2019t have to visit the site at any point.","title":"SpanshAttack"},{"location":"SpanshAttack/#requirements","text":"In addition to VoiceAttack, you will need the following plugins to use this profile: bindED EDDI installed as a VoiceAttack plugin ED-NeutronRouter : required for SpanshAttack. Make sure to grab the pre-release 1.02 since 1.01 has a bug with a hardcoded 50\u202fly jump range.","title":"Requirements"},{"location":"SpanshAttack/#eddi-speech-responder","text":"For the convenience of people that have not been using EDDI in the past, SpanshAttack will deactivate the speech responder automatically to not clutter them with unwanted TTS. If you are already an EDDI user and want to keep the default speech responder functionality, you will have to disable the EDDI.quietMode setting by running the customize settings disable eddi quiet mode command.","title":"EDDI speech responder"},{"location":"SpanshAttack/#settings","text":"Because Elite\u2019s keyboard handling is \u2026 weird you\u2019ll have to set the key to use for pasting text into Elite:Dangerous. If you are not using a \u201cstandard\u201d QWERT[YZ] layout, you will have to change it back to the key that is physically in the place where v would be on QWERTY. For other settings, see the Configuration Variables section. The last \u201csetting\u201d in the not-so-strict sense of the word is the SpanshAttack.getShipRange command. Any ship listed in there will automatically have its jump range used instead of VA prompting you for it. Since, again, VA will execute the first matching command found, you can create this command in your own profile when you are using SpanshAttack by including it. You can override a saved range for your ship by using the plot neutron [course;route;trip] with custom range command. The ED-NeutronRouter plugin is technically supposed to read the current jump range from EDDI; sadly a) it\u2019s bugged right now, and b) EDDI is storing the maximum distance for your ship instead of the current / full on fuel one.","title":"Settings"},{"location":"SpanshAttack/#including-the-profile","text":"When including the profile, be sure to Run the startup command. You will need to have a startup command in your profile (= one that is run on profile loading) and call SpanshAttack.startup from that one. Make sure all EDDI events that SpanshAttack needs are correctly handled. For all events used in SpanshAttack that you already have handlers for in your profile, you\u2019ll have to include a call to SpanshAttack.<event name> . E.g. for \u201cEDDI Jumped\u201d, call SpanshAttack.EDDI Jumped by name from your ((EDDI Jumped)) command. (Optional) Have a SpanshAttack.getShipRange command in your profile to overwrite the default one with your ship\u2019s ranges. See the default command for pointers.","title":"Including the Profile"},{"location":"SpanshAttack/#usage","text":"","title":"Usage"},{"location":"SpanshAttack/#plotting-a-route","text":"Target the system you want to be routed to (target, do not plot to it). Either exit the galaxy map or make sure you are on its first tab (or auto-plotting will break). Trigger the SpanshAttack.plotRoute command either by voice ( plot neutron [course;route;trip] [with custom range;] ) or calling it from another command. Enter your ship\u2019s jump range if prompted. Wait for the route to be calculated. The command will automatically open the galaxy map and jump to the first waypoint on your route. If you run into weird behaviour, it\u2019s probably because your target system is not in EDDB. Either target the first waypoint or plot to it. Start jumping!","title":"Plotting a Route"},{"location":"SpanshAttack/#plotting-to-a-system-unknown-to-the-neutron-router","text":"The router can only plot a route to a system that is in its data base (obviously can also only give you way points that are). If your target system is not, there are several levels of fallback handling to find a system that is. Check Next system coordinates provided by EDDI. If the system is in EDSM, but has for some reason not been sent over EDDN to other sites including Spansh we can get coordinates here. If the system is not in EDSM check EDTS. It can calculate approximate coordinates for a given procedurally generated system name. If that fails prompt the user for input. Query Spansh\u2019 API for the closest system to these coordinates. Plot a route to the closest system. Generally you should almost never be asked to input coordinates manually. If EDTS provides coordinates with an accuracy that is worse than \u00b1100\u202fly per axis, you will be prompted to make sure you are going roughly to the right coordinates. You will find the system that is used for plotting, its coordinates and the accuracy in VoiceAttack\u2019s log window.","title":"Plotting to a System Unknown to the Neutron Router"},{"location":"SpanshAttack/#neutron-jumping","text":"With standard settings, just supercharge off a neutron cone. You should automatically be taken to the galaxy map with the next waypoint selected. In case you have disabled auto-plotting to the next waypoint, manually invoke the SpanshAttack.targetNextNeutronWaypoint command by voice ( [target;] next neutron [waypoint; way point] ) or calling it from another command. Additionally, you can use the SpanshAttack.copyNextNeutronWaypoint / [get;copy] next neutron [waypoint;way point] command to copy the next neutron waypoint to the clipboard.","title":"Neutron Jumping"},{"location":"SpanshAttack/#manual-re-plot","text":"Trigger the SpanshAttack.replotRoute command either by voice ( replot neutron [course;route;trip] ) or calling it from another command. This will start a re-plot of the current route with the same target system and jump range.","title":"Manual Re-Plot"},{"location":"SpanshAttack/#refueling","text":"Whenever you refuel off a scoopable star, the profile will automatically throttle back up to 100% speed. Unless you have disabled it in your configuration, you will also automatically target the next system on your route and jump to it once you leave fuel scoop range.","title":"Refueling"},{"location":"SpanshAttack/#clearing-a-route","text":"When you reach your target system, the neutron route will automatically be cleared. If you want to prematurely end your trip, call the SpanshAttack.clearRoute / clear neutron [course;route;trip] command.","title":"Clearing a Route"},{"location":"SpanshAttack/#other-commands","text":"","title":"Other Commands"},{"location":"SpanshAttack/#announcing-jumps-left","text":"You can have VoiceAttack tell you the amount of jumps left on the current route by invoking SpanshAttack.announceJumpsLeft or saying how many [neutron;] jumps [are;] left? . Note : Because it\u2019s pretty much impossible to calculate a 100% accurate value for the total jumps left, it will just tell you the jump count from the current neutron waypoint .","title":"Announcing Jumps Left"},{"location":"SpanshAttack/#announce-elapsed-time-on-the-trip","text":"SpanshAttack keeps track of your start time, even if you have the option to time your trip turned off. This way you can get the time you\u2019ve been jumping with the SpanshAttack.announceTripTime or how long have i been [jumping;on this trip;on this neutron trip]? commands.","title":"Announce elapsed time on the trip"},{"location":"SpanshAttack/#reload-bindings","text":"If you change any relevant bindings (e.g. the galaxy map key), you should run the reload bindings command to make sure that SpanshAttack presses the right thing for you. Eh, just do it every time you edit your controls without re-starting VoiceAttack, just to be sure.","title":"Reload bindings"},{"location":"SpanshAttack/#helper-functions","text":"The profile contains a lot of helper functions that get called by the aforementioned commands. Have a look around, maybe learn something about VoiceAttack :)","title":"Helper Functions"},{"location":"SpanshAttack/#logging","text":"The profile supports logging a bunch of stuff to the VoiceAttack event log. By default, logging is concise and constrained to basically error messages. If you need more logging (usually for debugging purposes), say enable logging . If you want to enable verbose logging by default , call the Logging.enableLogging command from your custom profile\u2019s startup command.","title":"Logging"},{"location":"SpanshAttack/#exposed-variables","text":"The following Variables are global and thus readable (and writeable! Please don\u2019t unless it\u2019s a config variable \u2026) from other profiles:","title":"Exposed Variables"},{"location":"SpanshAttack/#configuration-variables","text":"There are a bunch of configuration variables. You should not overwrite those manually, instead use the provided commands in the _configuration section! Basically all the settings are available using the customize settings prefix, then saying [enable;disable] <setting> for on/off switches and set <setting> for text variables. EDDI.quietMode (boolean): whether or not to set EDDI to quite mode. Default: true. EDDI.useEddiForVoice (boolean): whether to use EDDI over VA\u2019s builtin say command. Default: false. Elite.pasteKey (string): the key used for pasting into Elite. On QWERTY this is v . Default: v . SpanshAttack.timeTrip (boolean): whether to automatically tell you at the end of a trip how long it took you to get there. Default: false. SpanshAttack.announceWaypoints (boolean): whether to announce each waypoint of the neutron route. Default: true. SpanshAttack.announceJumpsLeft (string): ; -separated list of remaining jumps to announce when said amounts are reached. Right now only works if they are exactly reached when supercharging off a neutron. Note the extra ; at the beginning and end of the string. Default: ;1;3;5;10;15;20;30;50;75;100; SpanshAttack.autoJumpAfterScooping (boolean): whether to automatically jump after fuel scooping (and moving out of scoop range). Default: true. SpanshAttack.autoPlot (boolean): whether to automatically plot to the next waypoint on supercharging. Default: true. SpanshAttack.clearOnShutdown (boolean): whether or not to automatically clear an active neutron route on Elite client shutdown. Default: true. SpanshAttack.defaultToLadenRange (boolean): whether or not to default to your ship\u2019s laden range (as reported by EDDI) instead of asking for user input. Sadly it\u2019s with current fuel, not full. Setting a ship\u2019s jump range in the SpanshAttack.getShipRange command will still overrule this. Default: false. SpanshAttack.copyWaypointToClipboard (boolean): whether to copy the next waypoint into the Windows clipboard for use in other programs. Default: false. python.scriptPath (string): the path you put the Python scripts in. Default: \u201c{VA_DIR}\\Sounds\\scripts\u201d.","title":"Configuration Variables"},{"location":"SpanshAttack/#other-variables","text":"These variables can be used to get information about the current neutron route. Please do not set them manually and / or from outside the SpanshAttack profile. SpanshAttack.plotSystem (string): the system actually plotted towards using the neutron router (onley used/set if the target system is not in the data base) SpanshAttack.targetSystem (string): the target system for the current neutron route SpanshAttack.nextNeutronWaypoint (string): the next waypoint on the current neutron route SpanshAttack.neutronJumpMode (boolean): neutron jump mode active/inactive SpanshAttack.jumpRange (decimal): the current ship\u2019s jump range","title":"Other Variables"},{"location":"StreamAttack/","text":"StreamAttack This profile uses the EDDI plugin to write a bunch of information about your commander, your current location and your ship to files that can be accessed e.g. by your streaming software to be displayed on stream. Default folder is %appdata%\\StreamAttack\\ . Requirements In addition to VoiceAttack, you will need the following plugins to use this profile: EDDI installed as a VoiceAttack plugin EDDI speech responder For the convenience of people that have not been using EDDI in the past, StreamAttack will deactivate the speech responder automatically to not clutter them with unwanted TTS. If you are already an EDDI user and want to keep the default speech responder functionality, you will have to disable the EDDI.quietMode setting by running the customize settings disable eddi quiet mode command. Settings See the Configuration Variables section. Including the Profile When including the profile, be sure to Run the startup command. You will need to have a startup command in your profile (= one that is run on profile loading) and call StreamAttack.startup from that one. Make sure all EDDI events that StreamAttack needs are correctly handled. For all events used in StreamAttack that you already have handlers for in your profile, you\u2019ll have to include a call to StreamAttack.<event name> . E.g. for \u201cEDDI Jumped\u201d, call StreamAttack.EDDI Jumped by name from your ((EDDI Jumped)) command. Commands clear jump target : clears the current jump target. set jump target : sets the jump target to the currently targeted system. Distance will be written to the configured file. [copy;open] ship build : copies the current ship build (coriolis) or opens it in your default browser. open StreamAttack folder : opens the configured folder in Explorer. Files the Profile Provides Elite Commander Elite\\cmdr\\name : the current commander\u2019s name. Jump Target Elite\\jumpTarget\\distance : distance to current jump target in light years. Elite\\jumpTarget\\full : pretty-printed <distance> ly to <name> . Elite\\jumpTarget\\name : the current jump target\u2019s system name. Location Elite\\location\\full : depending on your status, either the station you are currently docked at (+ system), the body you are currently near, or the system you are currently in. Elite\\location\\system : the system you are currently in. Ship Elite\\ship\\build : your current ship\u2019s loadout (link to coriolis). Elite\\ship\\full : \u201c<name>\u201d | <model> | <build> . Elite\\ship\\model : your current ship\u2019s model. Elite\\ship\\name : your current ship\u2019s name. Logging The profile supports logging a bunch of stuff to the VoiceAttack event log. By default, logging is concise and constrained to basically error messages. If you need more logging (usually for debugging purposes), say enable logging . If you want to enable verbose logging by default , call the Logging.enableLogging command from your custom profile\u2019s startup command. Exposed Variables The following Variables are global and thus readable (and writeable! Please don\u2019t unless it\u2019s a config variable \u2026) from other profiles: Configuration Variables There are a bunch of configuration variables. You should not overwrite those manually, instead use the provided commands in the _configuration section! Basically all the settings are available using the customize settings prefix, then saying [enable;disable] <setting> for on/off switches and set <setting> for text variables. EDDI.quietMode (boolean): whether or not to set EDDI to quite mode. Default: true. EDDI.useEddiForVoice (boolean): whether to use EDDI over VA\u2019s builtin say command. Default: false. StreamAttack.outputDir (string): the directory StreamAttack will save its information to. Default: %appdata%\\StreamAttack\\ . python.ScriptPath (string): the path you have placed the compiled Python scripts in. Default: \u201c{VA_DIR}\\Sounds\\scripts\u201d (the \u201c\\Sounds\\scripts\u201d folder in your VoiceAttack installation directory). Other Variables These variables can be used to get information about the current neutron route. Please do not set them manually and / or from outside the StreamAttack profile. StreamAttack.Elite.jumpTarget (string): the current jump target.","title":"StreamAttack #"},{"location":"StreamAttack/#streamattack","text":"This profile uses the EDDI plugin to write a bunch of information about your commander, your current location and your ship to files that can be accessed e.g. by your streaming software to be displayed on stream. Default folder is %appdata%\\StreamAttack\\ .","title":"StreamAttack"},{"location":"StreamAttack/#requirements","text":"In addition to VoiceAttack, you will need the following plugins to use this profile: EDDI installed as a VoiceAttack plugin","title":"Requirements"},{"location":"StreamAttack/#eddi-speech-responder","text":"For the convenience of people that have not been using EDDI in the past, StreamAttack will deactivate the speech responder automatically to not clutter them with unwanted TTS. If you are already an EDDI user and want to keep the default speech responder functionality, you will have to disable the EDDI.quietMode setting by running the customize settings disable eddi quiet mode command.","title":"EDDI speech responder"},{"location":"StreamAttack/#settings","text":"See the Configuration Variables section.","title":"Settings"},{"location":"StreamAttack/#including-the-profile","text":"When including the profile, be sure to Run the startup command. You will need to have a startup command in your profile (= one that is run on profile loading) and call StreamAttack.startup from that one. Make sure all EDDI events that StreamAttack needs are correctly handled. For all events used in StreamAttack that you already have handlers for in your profile, you\u2019ll have to include a call to StreamAttack.<event name> . E.g. for \u201cEDDI Jumped\u201d, call StreamAttack.EDDI Jumped by name from your ((EDDI Jumped)) command.","title":"Including the Profile"},{"location":"StreamAttack/#commands","text":"clear jump target : clears the current jump target. set jump target : sets the jump target to the currently targeted system. Distance will be written to the configured file. [copy;open] ship build : copies the current ship build (coriolis) or opens it in your default browser. open StreamAttack folder : opens the configured folder in Explorer.","title":"Commands"},{"location":"StreamAttack/#files-the-profile-provides","text":"","title":"Files the Profile Provides"},{"location":"StreamAttack/#elite","text":"","title":"Elite"},{"location":"StreamAttack/#commander","text":"Elite\\cmdr\\name : the current commander\u2019s name.","title":"Commander"},{"location":"StreamAttack/#jump-target","text":"Elite\\jumpTarget\\distance : distance to current jump target in light years. Elite\\jumpTarget\\full : pretty-printed <distance> ly to <name> . Elite\\jumpTarget\\name : the current jump target\u2019s system name.","title":"Jump Target"},{"location":"StreamAttack/#location","text":"Elite\\location\\full : depending on your status, either the station you are currently docked at (+ system), the body you are currently near, or the system you are currently in. Elite\\location\\system : the system you are currently in.","title":"Location"},{"location":"StreamAttack/#ship","text":"Elite\\ship\\build : your current ship\u2019s loadout (link to coriolis). Elite\\ship\\full : \u201c<name>\u201d | <model> | <build> . Elite\\ship\\model : your current ship\u2019s model. Elite\\ship\\name : your current ship\u2019s name.","title":"Ship"},{"location":"StreamAttack/#logging","text":"The profile supports logging a bunch of stuff to the VoiceAttack event log. By default, logging is concise and constrained to basically error messages. If you need more logging (usually for debugging purposes), say enable logging . If you want to enable verbose logging by default , call the Logging.enableLogging command from your custom profile\u2019s startup command.","title":"Logging"},{"location":"StreamAttack/#exposed-variables","text":"The following Variables are global and thus readable (and writeable! Please don\u2019t unless it\u2019s a config variable \u2026) from other profiles:","title":"Exposed Variables"},{"location":"StreamAttack/#configuration-variables","text":"There are a bunch of configuration variables. You should not overwrite those manually, instead use the provided commands in the _configuration section! Basically all the settings are available using the customize settings prefix, then saying [enable;disable] <setting> for on/off switches and set <setting> for text variables. EDDI.quietMode (boolean): whether or not to set EDDI to quite mode. Default: true. EDDI.useEddiForVoice (boolean): whether to use EDDI over VA\u2019s builtin say command. Default: false. StreamAttack.outputDir (string): the directory StreamAttack will save its information to. Default: %appdata%\\StreamAttack\\ . python.ScriptPath (string): the path you have placed the compiled Python scripts in. Default: \u201c{VA_DIR}\\Sounds\\scripts\u201d (the \u201c\\Sounds\\scripts\u201d folder in your VoiceAttack installation directory).","title":"Configuration Variables"},{"location":"StreamAttack/#other-variables","text":"These variables can be used to get information about the current neutron route. Please do not set them manually and / or from outside the StreamAttack profile. StreamAttack.Elite.jumpTarget (string): the current jump target.","title":"Other Variables"}]}